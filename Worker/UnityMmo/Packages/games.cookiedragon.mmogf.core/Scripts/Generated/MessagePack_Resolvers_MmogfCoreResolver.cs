// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    public class MmogfCoreResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new MmogfCoreResolver();

        private MmogfCoreResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = MmogfCoreResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class MmogfCoreResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;

        static MmogfCoreResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(47)
            {
                { typeof(global::Mmogf.Core.Contracts.ConnectPlayerRequest?), 0 },
                { typeof(global::Mmogf.Core.Contracts.CreateEntityRequest?), 1 },
                { typeof(global::Mmogf.Core.Contracts.DeleteEntityRequest?), 2 },
                { typeof(global::Mmogf.Core.Contracts.NothingInternal?), 3 },
                { typeof(global::System.Collections.Generic.Dictionary<short, byte[]>), 4 },
                { typeof(global::System.Collections.Generic.List<global::Mmogf.Core.Contracts.Acl>), 5 },
                { typeof(global::System.Collections.Generic.List<global::Mmogf.Core.Contracts.EntityWorldConfig>), 6 },
                { typeof(global::System.Collections.Generic.List<global::Mmogf.Servers.Shared.EntityId>), 7 },
                { typeof(global::Mmogf.Core.Contracts.Commands.CommandStatus), 8 },
                { typeof(global::Mmogf.Core.Contracts.ServerCodes), 9 },
                { typeof(global::Mmogf.Core.Contracts.Acl), 10 },
                { typeof(global::Mmogf.Core.Contracts.Acls), 11 },
                { typeof(global::Mmogf.Core.Contracts.ChangeInterestArea), 12 },
                { typeof(global::Mmogf.Core.Contracts.ClientConnect), 13 },
                { typeof(global::Mmogf.Core.Contracts.Commands.CommandRequest), 14 },
                { typeof(global::Mmogf.Core.Contracts.Commands.CommandRequestHeader), 15 },
                { typeof(global::Mmogf.Core.Contracts.Commands.CommandResponse), 16 },
                { typeof(global::Mmogf.Core.Contracts.Commands.CommandResponseHeader), 17 },
                { typeof(global::Mmogf.Core.Contracts.ConnectPlayerRequest), 18 },
                { typeof(global::Mmogf.Core.Contracts.CreateEntityRequest), 19 },
                { typeof(global::Mmogf.Core.Contracts.DeleteEntityRequest), 20 },
                { typeof(global::Mmogf.Core.Contracts.EntityCheckout), 21 },
                { typeof(global::Mmogf.Core.Contracts.EntityInfo), 22 },
                { typeof(global::Mmogf.Core.Contracts.EntityType), 23 },
                { typeof(global::Mmogf.Core.Contracts.EntityUpdate), 24 },
                { typeof(global::Mmogf.Core.Contracts.EntityWorldConfig), 25 },
                { typeof(global::Mmogf.Core.Contracts.EventData), 26 },
                { typeof(global::Mmogf.Core.Contracts.Events.EventRequest), 27 },
                { typeof(global::Mmogf.Core.Contracts.Events.EventRequestHeader), 28 },
                { typeof(global::Mmogf.Core.Contracts.FixedVector3), 29 },
                { typeof(global::Mmogf.Core.Contracts.GameData), 30 },
                { typeof(global::Mmogf.Core.Contracts.MmoMessage), 31 },
                { typeof(global::Mmogf.Core.Contracts.MmoMessageHeader), 32 },
                { typeof(global::Mmogf.Core.Contracts.NothingInternal), 33 },
                { typeof(global::Mmogf.Core.Contracts.PlayerCreator), 34 },
                { typeof(global::Mmogf.Core.Contracts.PlayerCreator.ConnectPlayer), 35 },
                { typeof(global::Mmogf.Core.Contracts.PlayerHeartbeatClient), 36 },
                { typeof(global::Mmogf.Core.Contracts.PlayerHeartbeatClient.RequestHeartbeat), 37 },
                { typeof(global::Mmogf.Core.Contracts.PlayerHeartbeatServer), 38 },
                { typeof(global::Mmogf.Core.Contracts.Rotation), 39 },
                { typeof(global::Mmogf.Core.Contracts.ServerConnect), 40 },
                { typeof(global::Mmogf.Core.Contracts.World.ChangeInterestAreaCommand), 41 },
                { typeof(global::Mmogf.Core.Contracts.World.CreateEntity), 42 },
                { typeof(global::Mmogf.Core.Contracts.World.DeleteEntity), 43 },
                { typeof(global::Mmogf.Core.Contracts.World.PingCommand), 44 },
                { typeof(global::Mmogf.Core.Contracts.WorldConfig), 45 },
                { typeof(global::Mmogf.Servers.Shared.EntityId), 46 },
            };
        }

        internal static object GetFormatter(global::System.Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MessagePack.Formatters.NullableFormatter<global::Mmogf.Core.Contracts.ConnectPlayerRequest>();
                case 1: return new global::MessagePack.Formatters.NullableFormatter<global::Mmogf.Core.Contracts.CreateEntityRequest>();
                case 2: return new global::MessagePack.Formatters.NullableFormatter<global::Mmogf.Core.Contracts.DeleteEntityRequest>();
                case 3: return new global::MessagePack.Formatters.NullableFormatter<global::Mmogf.Core.Contracts.NothingInternal>();
                case 4: return new global::MessagePack.Formatters.DictionaryFormatter<short, byte[]>();
                case 5: return new global::MessagePack.Formatters.ListFormatter<global::Mmogf.Core.Contracts.Acl>();
                case 6: return new global::MessagePack.Formatters.ListFormatter<global::Mmogf.Core.Contracts.EntityWorldConfig>();
                case 7: return new global::MessagePack.Formatters.ListFormatter<global::Mmogf.Servers.Shared.EntityId>();
                case 8: return new MessagePack.Formatters.Mmogf.Core.Contracts.Commands.CommandStatusFormatter();
                case 9: return new MessagePack.Formatters.Mmogf.Core.Contracts.ServerCodesFormatter();
                case 10: return new MessagePack.Formatters.Mmogf.Core.Contracts.AclFormatter();
                case 11: return new MessagePack.Formatters.Mmogf.Core.Contracts.AclsFormatter();
                case 12: return new MessagePack.Formatters.Mmogf.Core.Contracts.ChangeInterestAreaFormatter();
                case 13: return new MessagePack.Formatters.Mmogf.Core.Contracts.ClientConnectFormatter();
                case 14: return new MessagePack.Formatters.Mmogf.Core.Contracts.Commands.CommandRequestFormatter();
                case 15: return new MessagePack.Formatters.Mmogf.Core.Contracts.Commands.CommandRequestHeaderFormatter();
                case 16: return new MessagePack.Formatters.Mmogf.Core.Contracts.Commands.CommandResponseFormatter();
                case 17: return new MessagePack.Formatters.Mmogf.Core.Contracts.Commands.CommandResponseHeaderFormatter();
                case 18: return new MessagePack.Formatters.Mmogf.Core.Contracts.ConnectPlayerRequestFormatter();
                case 19: return new MessagePack.Formatters.Mmogf.Core.Contracts.CreateEntityRequestFormatter();
                case 20: return new MessagePack.Formatters.Mmogf.Core.Contracts.DeleteEntityRequestFormatter();
                case 21: return new MessagePack.Formatters.Mmogf.Core.Contracts.EntityCheckoutFormatter();
                case 22: return new MessagePack.Formatters.Mmogf.Core.Contracts.EntityInfoFormatter();
                case 23: return new MessagePack.Formatters.Mmogf.Core.Contracts.EntityTypeFormatter();
                case 24: return new MessagePack.Formatters.Mmogf.Core.Contracts.EntityUpdateFormatter();
                case 25: return new MessagePack.Formatters.Mmogf.Core.Contracts.EntityWorldConfigFormatter();
                case 26: return new MessagePack.Formatters.Mmogf.Core.Contracts.EventDataFormatter();
                case 27: return new MessagePack.Formatters.Mmogf.Core.Contracts.Events.EventRequestFormatter();
                case 28: return new MessagePack.Formatters.Mmogf.Core.Contracts.Events.EventRequestHeaderFormatter();
                case 29: return new MessagePack.Formatters.Mmogf.Core.Contracts.FixedVector3Formatter();
                case 30: return new MessagePack.Formatters.Mmogf.Core.Contracts.GameDataFormatter();
                case 31: return new MessagePack.Formatters.Mmogf.Core.Contracts.MmoMessageFormatter();
                case 32: return new MessagePack.Formatters.Mmogf.Core.Contracts.MmoMessageHeaderFormatter();
                case 33: return new MessagePack.Formatters.Mmogf.Core.Contracts.NothingInternalFormatter();
                case 34: return new MessagePack.Formatters.Mmogf.Core.Contracts.PlayerCreatorFormatter();
                case 35: return new MessagePack.Formatters.Mmogf.Core.Contracts.PlayerCreator_ConnectPlayerFormatter();
                case 36: return new MessagePack.Formatters.Mmogf.Core.Contracts.PlayerHeartbeatClientFormatter();
                case 37: return new MessagePack.Formatters.Mmogf.Core.Contracts.PlayerHeartbeatClient_RequestHeartbeatFormatter();
                case 38: return new MessagePack.Formatters.Mmogf.Core.Contracts.PlayerHeartbeatServerFormatter();
                case 39: return new MessagePack.Formatters.Mmogf.Core.Contracts.RotationFormatter();
                case 40: return new MessagePack.Formatters.Mmogf.Core.Contracts.ServerConnectFormatter();
                case 41: return new MessagePack.Formatters.Mmogf.Core.Contracts.World_ChangeInterestAreaCommandFormatter();
                case 42: return new MessagePack.Formatters.Mmogf.Core.Contracts.World_CreateEntityFormatter();
                case 43: return new MessagePack.Formatters.Mmogf.Core.Contracts.World_DeleteEntityFormatter();
                case 44: return new MessagePack.Formatters.Mmogf.Core.Contracts.World_PingCommandFormatter();
                case 45: return new MessagePack.Formatters.Mmogf.Core.Contracts.WorldConfigFormatter();
                case 46: return new MessagePack.Formatters.Mmogf.Servers.Shared.EntityIdFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1649 // File name should match first type name
